<?php
// $Id: search_ranking_recency.test,v 1.3 2008/08/10 07:12:57 blucches Exp $

/**
 * Tests to ensure content that is published most recently will rank higher.
 */
class SearchRankingRecency extends SearchRankingTest {
  
  /**
   * Implementation of getInfo().
   */
  function getInfo() {
    return array(
      'name' => t('Search Ranking: Recency'),
      'description' => t('Tests to ensure content that is published most recently will rank higher.'),
      'group' => t('Search'),
    );
  }
  
  /**
   * Promoted nodes should rank higher now.
   */
  function testRecency() {
    $ranking = 'Content Recency';
    
    // Test nodes to be modified are not currently #1
    variable_set('node_rank_recent', 0);
    $this->assertNotFirst($ranking, $this->nodes[12]->nid, $this->keys);
    $this->assertNotFirst($ranking, $this->nodes[15]->nid, $this->keys);
    
    $this->nodes[12]->created = time() + 25;
    $this->nodes[15]->created = time() + 50;
    
    node_save($this->nodes[12]);
    node_save($this->nodes[15]);
    
    variable_set('node_rank_recent', 5);
    $this->assertRanking($ranking, array($this->nodes[15], $this->nodes[12]), $this->keys);
    variable_set('node_rank_recent', 0);
  }
}
